{% extends "FOSUserBundle::Profile/Panel/panel_layout.html.twig" %}
{% block content_section %}
{{ dump(negocio) }}
{{ form(form, {'attr': {'novalidate': 'novalidate'}}) }}
<input id="pac-input" class="controls" type="text" value=""
       placeholder="Introduzca una ubicaciÃ³n">
<div id="map" style="height: 400px;
    width: 799px;
    margin: 10px auto;">

</div>
    {% block javascripts %}
        {{ parent() }}
        <script>
            function initMap() {
                var map = new google.maps.Map(document.getElementById('map'), {
                    center: {lat: -12.0552581, lng: -77.080205},
                    zoom: 13
                });
                var input = /** @type {!HTMLInputElement} */(
                        document.getElementById('pac-input'));

                //var types = document.getElementById('type-selector');
                map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

                var autocomplete = new google.maps.places.Autocomplete(input);
                autocomplete.setTypes([]); // changetype-all
                autocomplete.bindTo('bounds', map);

                var infowindow = new google.maps.InfoWindow();
                var marker = new google.maps.Marker({
                    map: map,
                    anchorPoint: new google.maps.Point(0, -29)
                });

                autocomplete.addListener('place_changed', function() {
                    infowindow.close();
                    marker.setVisible(false);
                    var place = autocomplete.getPlace();
                    if (!place.geometry) {
                        window.alert("Autocomplete's returned place contains no geometry");
                        return;
                    }
                    console.log(place.formatted_address);
                    var latitude = place.geometry.location.lat();
                    var longitude = place.geometry.location.lng();
                    document.getElementById("googlemap_ubicacion").setAttribute("value", JSON.stringify({lat:latitude,lng:longitude,formatted_address:place.formatted_address}));
                    // If the place has a geometry, then present it on a map.
                    if (place.geometry.viewport) {
                        map.fitBounds(place.geometry.viewport);
                    } else {
                        map.setCenter(place.geometry.location);
                        map.setZoom(17);  // Why 17? Because it looks good.
                    }
                    marker.setIcon(/** @type {google.maps.Icon} */({
                        url: place.icon,
                        size: new google.maps.Size(71, 71),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(17, 34),
                        scaledSize: new google.maps.Size(35, 35)
                    }));
                    marker.setPosition(place.geometry.location);
                    marker.setVisible(true);

                    var address = '';
                    if (place.address_components) {
                        address = [
                            (place.address_components[0] && place.address_components[0].short_name || ''),
                            (place.address_components[1] && place.address_components[1].short_name || ''),
                            (place.address_components[2] && place.address_components[2].short_name || '')
                        ].join(' ');
                    }

                    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
                    infowindow.open(map, marker);
                });
            }

        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDcllALlFAfHCaSCv1Oqmq0_wwF5qmGc_A&signed_in=true&libraries=places&language=es-ES&callback=initMap"
                async defer></script>
    {% endblock %}
{% endblock %}
